org: danzlobin
app: textract-service-app
service: textract-service-dan-zlobin

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  environment:
    FILES_TABLE: ${self:custom.filesTableName}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.filesTableName}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true

  filesTableName: danemm99-table

resources:
  Resources:
    FilesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.filesTableName}
        AttributeDefinitions:
          - AttributeName: file_id
            AttributeType: S
        KeySchema:
          - AttributeName: file_id
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        BillingMode: PAY_PER_REQUEST

functions:
  createFile:
    handler: handler.create_file
    events:
      - http:
          path: files
          method: post

  processFile:
    handler: handler.process_file
    events:
      - s3:
          bucket: danemm99-bucket
          event: s3:ObjectCreated:*

  makeCallback:
    handler: handler.make_callback
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - FilesTable
              - StreamArn

  getFile:
    handler: handler.get_file
    events:
      - http:
          path: files/{file_id}
          method: get
